{"version":3,"sources":["static/images/you_are_here.png","containers/AppNavbar/AppNavbar.js","containers/App/App.js","utils/geoUtils.js","components/ATMFilter/ATMSearch.js","constants/banks.js","constants/networks.js","constants/services.js","actions/index.js","actions/types.js","components/ATMFilter/ATMFilterPanel.js","components/ATMListing/ATMItem.js","components/Leaflet/ATMMarker.js","components/ATMDetail/ATMDetailContent.js","components/ATMDetail/ATMItemDetail.js","components/ATMListing/ATMItemDialog.js","components/ATMListing/ATMListing.js","models/atm.js","utils/dataLoader.js","containers/Landing/LandingListView.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/pageReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","appBar","alignItems","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","theme","createMuiTheme","typography","useNextVariants","App","WrappedComponent","_Component","AppHOC","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MuiThemeProvider_default","AppNavbar_AppNavbar","location","style","marginTop","zIndex","Component","distanceBetweenTwoGeoPoints","lat1","lng1","lat2","lng2","dLat","Math","PI","dlng","sin","cos","atan2","sqrt","padding","display","width","borderBottomRightRadius","borderBottomLeftRadius","input","marginLeft","flex","iconButton","divider","height","margin","Paper_default","elevation","InputBase_default","placeholder","IconButton_default","aria-label","Search_default","Divider_default","Directions_default","hsbc","idx","en","zh","hangSeng","jetco","hangseng","networks","SERVICES","SERVICE_NAMES","setSelectedLocation","lat","lng","zoomLvl","length","undefined","dispatch","type","dispatchSetSelectedLocation","setCurrentLocation","dispatchSetCurrentLocation","toggleATMDetailDialog","open","dispatchToggleATMDetailDialog","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ATMFilterPanel","_this","call","state","network","bank","event","toggleFilterOption","target","name","checked","_this$props","filters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","handleSelectChange","bind","inputProps","id","MenuItem_default","map","index","_this$props2","_this2","serviceIndexes","services","component","FormLabel_default","FormGroup_default","serviceIndex","FormControlLabel_default","control","Switch_default","handleCheckboxChange","label","_this3","day","_this4","option","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","column","heading","ExpansionPanelDetails_default","details","renderNetworkSelect","renderBankSelect","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","ExpansionPanelActions_default","Button_default","size","connect","ownProps","atm","dispatchToggleFilterOption","ATMItem","isOpenNow","Fragment","Chip_default","chip","distance","isNaN","round","concat","_atm$ATMAddress","ATMAddress","LatitudeDescription","LongitudeDescription","ATMName","ListItem_default","button","onClick","atmListItemOnClick","ListItemText_default","primary","secondary","AddressLine","renderDistance","renderOpeningClosingTag","React","borderRadius","withTheme","ATMMarker","data","Popup","CardContent_default","popUpContent","title","gutterBottom","pos","BranchName","HotlineNumber","latitude","longitude","Marker","renderMarkerClusterGroup","&:last-child","paddingBottom","ATMDetailContent","handleDialogClose","saveMap","setState","isMapInit","renderDrawer","toolbar","Drawer_default","drawer","paper","drawerPaper","renderDrawerContent","renderNetworkAvatar","Network","ListItemAvatar_default","Avatar_default","networkAvatar","renderListItem","subheader","List_default","ListSubheader_default","subHeader","listRoot","_this$props$atm","_this$props$atm$ATMAd","CountryCode","TerritoryName","DistrictName","inline","selectedLocation","currentLocation","zoom","selectedPosition","currentPosition","keys","_this$props3","selectedZoomLvl","icon","L","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","zoomLvlToUse","content","Map","mapContainer","center","maxZoom","ref","TileLayer","attribution","url","Leaflet_ATMMarker","top","flexShrink","paddingTop","mixins","maxWidth","backgroundColor","palette","background","deepOrange","ATMItemDetail","Close_default","ATMDetail_ATMDetailContent","Transition","Slide_default","assign","direction","ATMItemDialog","Dialog_default","fullScreen","onClose","TransitionComponent","ATMDetail_ATMItemDetail","page","ATMListing","handleDrawerToggle","mobileOpen","renderATMItems","allATMs","ATMListing_ATMItem","ATMListing_ATMItemDialog","CssBaseline_default","spacing","unit","ATM","record","Bank","ATMServices","CoinSortIndicator","ForeignCurrencyIndicator","DisabledAccessIndicator","BillPaymentIndicator","CashWithdrawalIndicator","CashDepositIndicator","ChequeDepositIndicator","OpeningHours","copyFields","copyTo","copyFrom","_arr","_i","field","hasOwnProperty","isArray","serviceKey","isServiceIndicatorReturnTrue","dayOfWeek","moment","format","openingHour","find","oh","OpenDayDescription","openTime","OpenTime","closeTime","CloseTime","isBetween","HangSengATM","_ATM","banks","AutomatedTellerMachineOperatingHour","createGenericOpeningHours","CashDepositMachineIndicator","ChequeDepositMachineIndicator","RMBandForeignCurrencyATMIndicator","RMBATMwithoutForeignCurrencyIndicator","HsbcATM","_ATM2","WEEK_DAYS","weekday","loadAllData","toConsumableArray","atms","rawData","HANG_SENG_DATA","Brand","hangSengLatLngLUT","i","HANG_SENG_LATLNG_DATA","rec","address","latlng","push","loadHangSengData","HSBC_DATA","LandingListView","initATMData","detectCurrentLocation","me","navigator","geolocation","getCurrentPosition","coords","sortATMData","err","timeout","setATMData","sortedAllATMs","sort","x","y","ATMFilter_ATMSearch","ATMFilter_ATMFilterPanel","components_ATMListing_ATMListing","atmData","dispatchSetATMData","Routes","Route","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","filterData","filter","includes","isServiceAvaliable","atmDataReducer","action","objectSpread","raw_data","defineProperty","locationReducer","pageReducer","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.a0caca7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    alignItems: 'center',\n  }\n};\n\nfunction AppNavbar(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Hong Kong ATM Locator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppNavbar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = (WrappedComponent) => {\n  class AppHOC extends Component {\n    render() {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <div>\n              <AppNavbar location={this.props.location}/>\n              <div style={{marginTop: '64px', zIndex: '1200'}}>\n                <WrappedComponent/>\n              </div>\n          </div>\n        </MuiThemeProvider>\n      );\n    }\n  }\n  return AppHOC;\n}\n\nexport default App;","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nexport {\n    distanceBetweenTwoGeoPoints\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    zIndex: 1200,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction ATMSearch(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <InputBase className={classes.input} placeholder=\"Search ...\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nATMSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ATMSearch);","export const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n}\n\nexport const hangSeng = {\n    idx: 'hangSeng',\n    en: 'Hang Seng Bank',\n    zh: ''\n}\n\nexport const bochk = {\n    idx: 'bochk',\n    en: 'Bank of China(Hong Kong) Limited',\n    zh: ''\n}\n\nexport const bankcomm = {\n    idx: 'bankcomm',\n    en: 'Bank of Communications (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cncbinternational = {\n    idx: 'cncbinternational',\n    en: 'China CITIC Bank International Limited',\n    zh: ''\n}\n\nexport const asiaccb = {\n    idx: 'asiaccb',\n    en: 'China Construction Bank (Asia) Corporation Limited',\n    zh: ''\n}\n\nexport const cmbchina = {\n    idx: 'cmbchina',\n    en: 'China Merchants Bank Hong Kong Branch',\n    zh: ''\n}\n\nexport const chiyubank = {\n    idx: 'chiyubank',\n    en: 'Chiyu Banking Corporation Limited',\n    zh: ''\n}\n\nexport const chonghingbank = {\n    idx: 'chonghingbank',\n    en: 'Chong Hing Bank Limited',\n    zh: ''\n}\n\nexport const citibank = {\n    idx: 'citibank',\n    en: 'Citibank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cmbwinglungbank = {\n    idx: 'cmbwinglungbank',\n    en: 'CMB Wing Lung Bank Limited',\n    zh: ''\n}\n\nexport const dahsing = {\n    idx: 'dahsing',\n    en: 'Dah Sing Bank, Limited',\n    zh: ''\n}\n\nexport const dbs = {\n    idx: 'dbs',\n    en: 'DBS Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const fubonbank = {\n    idx: 'fubonbank',\n    en: 'Fubon Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const icbcasia = {\n    idx: 'icbcasia',\n    en: 'Industrial and Commercial Bank of China (Asia) Limited',\n    zh: ''\n}\n\nexport const ocbcwhhk = {\n    idx: 'ocbcwhhk',\n    en: 'OCBC Wing Hang Bank',\n    zh: ''\n}\n\nexport const publicbank = {\n    idx: 'publicbank',\n    en: 'Public Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const shacombank = {\n    idx: 'shacombank',\n    en: 'Shanghai Commercial Bank Limited',\n    zh: ''\n}\n\nexport const nanyang = {\n    idx: 'shacombank',\n    en: 'Nanyang Commercial Bank Limited',\n    zh: ''\n}\n\nexport const standardchartered = {\n    idx: 'standardchartered',\n    en: 'Standard Chartered Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const hkbea = {\n    idx: 'hkbea',\n    en: 'The Bank of East Asia',\n    zh: ''\n}\n\nexport const jetco = [\n    bochk,\n    bankcomm,\n    cncbinternational,\n    asiaccb,\n    cmbchina,\n    chiyubank,\n    chonghingbank,\n    citibank,\n    cmbwinglungbank,\n    dahsing,\n    dbs,\n    fubonbank,\n    icbcasia,\n    ocbcwhhk,\n    nanyang,\n    publicbank,\n    shacombank,\n    standardchartered,\n    hkbea\n]","export const jetco = {\n    idx: 'jetco',\n    en: 'Jetco',\n    zh: ''\n};\n\nexport const hangseng = {\n    idx: 'hangseng',\n    en: 'Hang Seng',\n    zh: ''\n};\n\nexport const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n};\n\nexport const networks = [\n    jetco,\n    hangseng,\n    hsbc\n]","export const SERVICE_COIN_SORT = 'coin_sort';\nexport const SERVICE_FOREIGN_CURRENCY = 'foreign_currency';\nexport const SERVICE_DISABLED_ACCESS = 'disabled_access';\nexport const SERVICE_BILL_PAYMENT = 'bill_payment';\nexport const SERVICE_CASH_WITHDRAWAL = 'cash_withdrawal';\nexport const SERVICE_CASH_DEPOSIT = 'cash_deposit';\nexport const SERVICE_CHEQUE_DEPOSIT = 'cheque_deposit';\n\n\n\nexport const SERVICES = [\n  SERVICE_COIN_SORT,\n  SERVICE_FOREIGN_CURRENCY,\n  SERVICE_DISABLED_ACCESS,\n  SERVICE_BILL_PAYMENT,\n  SERVICE_CASH_WITHDRAWAL,\n  SERVICE_CASH_DEPOSIT,\n  SERVICE_CHEQUE_DEPOSIT\n];\n\nexport const SERVICE_NAMES = [\n  'Coin Sort',\n  'Foreign Currency',\n  'Disabled Access',\n  'Bill Payment',\n  'Cash Withdrawal',\n  'Cash Deposit',\n  'Cheque Deposit'\n];","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION,\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_FILTER_OPTION,\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, idx, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, idx: idx, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nconst dispatchToggleATMDetailDialog = (open) => {\n    return {type: TOGGLE_ATM_DETAIL_DIALOG, open: open}\n}\n\nconst dispatchToggleFilterOption = (key, value) => {\n  return {type: TOGGLE_FILTER_OPTION, key, value}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, idx, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, idx, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}\n\nexport const toggleATMDetailDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMDetailDialog(open))\n    }\n}\n\nexport const toggleFilterOption = (key, value) => {\n  return dispatch => {\n    dispatch(dispatchToggleFilterOption(key, value));\n  }\n}","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\nexport const TOGGLE_ATM_DETAIL_DIALOG = 'TOGGLE_ATM_DETAIL_DIALOG';\nexport const TOGGLE_FILTER_OPTION = 'TOGGLE_FILTER_OPTION';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { jetco } from '../../constants/banks';\nimport { networks } from '../../constants/networks';\nimport { connect } from 'react-redux';\nimport { SERVICES, SERVICE_NAMES } from '../../constants/services';\n\nimport {\n  toggleFilterOption\n} from '../../actions'\n\n\nconst styles = {\n    root: {\n        width: '100%',\n      },\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all'\n    }\n  }\n\n  handleSelectChange(event) {\n      // this.setState({ [event.target.name]: event.target.value });\n      this.props.toggleFilterOption(event.target.name, event.target.value);\n  };\n\n  handleCheckboxChange(name) {\n      return function(event){\n          // this.setState({ [name]: event.target.checked });\n          this.props.toggleFilterOption(name, event.target.checked);\n      }\n  };\n\n  renderNetworkSelect() {\n    const { classes, filters: { network }} = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={network === undefined ? 'all' : network}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n              {\n                networks.map((network, index) => {\n                  return (\n                    <MenuItem value={network.idx} key={index}>\n                      {network.en}\n                    </MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    /*\n      TODO: the value s restricted based on Network\n    */\n    const { classes, filters: { bank } } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={bank === undefined ? 'all' : bank}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n            {\n              jetco.map((bank, index) => {\n                return (\n                  <MenuItem value={bank.idx} key={index}>\n                    {bank.en}\n                  </MenuItem>\n                );\n              })\n            }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const serviceIndexes = SERVICES;\n    const services = SERVICE_NAMES;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             serviceIndexes.map((serviceIndex, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[serviceIndex]}\n                      onChange={this.handleCheckboxChange(serviceIndex).bind(this)}\n                      value={services[index]}\n                    />\n                  }\n                  label={services[index]}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = [\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday'\n    ]\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day).bind(this)}\n                      value={day}\n                    />\n                  }\n                  label={day}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <div></div>\n      /*\n        TODO:\n      */\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option).bind(this)}\n                    value={option}\n                  />\n                }\n                label={option}\n                key={index}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    /*\n      TODO: Add Grid for responsive design\n    */\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <div className={classes.column}>\n                <Typography className={classes.heading}>Filter</Typography>\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n                { this.renderNetworkSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderBankSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderServicesCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningDayCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningHourCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningOrClosingCheckbox() }\n                <Divider variant=\"middle\" />\n            </ExpansionPanelDetails>\n            <Divider />\n            <ExpansionPanelActions>\n                <Button size=\"small\">Cancel</Button>\n                <Button size=\"small\" color=\"primary\">\n                Submit\n                </Button>\n            </ExpansionPanelActions>\n            </ExpansionPanel>\n        </div>\n      );\n  }\n}\n\nATMFilterPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst\nmapStateToProps = (state, ownProps) => {\n    return {\n      filters: state.atm.filters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleFilterOption: (key, value) => {\n            dispatch(toggleFilterOption(key, value));\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMFilterPanel));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport * as moment from 'moment';\n\nimport {\n    setSelectedLocation,\n    toggleATMDetailDialog\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0\n    }\n});\n\nclass ATMItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <br/>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distance > 1 ? Math.round(distance) + ' km' : Math.round(distance * 1000) + ' m';\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n\n    atmListItemOnClick(atm, idx) {\n        const { ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n        if(LatitudeDescription && LongitudeDescription){\n            this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription, idx);\n        }\n\n        // toggle detail page\n        this.props.toggleATMDetailDialog(true);\n    }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMAddress, distance } = atm;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={ idx } onClick={() => this.atmListItemOnClick(atm, idx)}>\n                    <div>\n                      <ListItemText\n                          primary={ ATMName }\n                          secondary={\n                              <React.Fragment>\n                                  { ATMAddress.AddressLine }\n                                  <br/>\n                                  { this.renderDistance(distance) }\n\n                              </React.Fragment>\n                          }\n                      />\n                      { this.renderOpeningClosingTag(atm) }\n                    </div>\n                </ListItem>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng, idx) => {\n            dispatch(setSelectedLocation(lat, lng, idx))\n        },\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarker extends React.Component {\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n\n        const latitude = atm.ATMAddress.LatitudeDescription;\n        const longitude = atm.ATMAddress.LongitudeDescription;\n        return (\n            <Marker \n                position= { [latitude, longitude] } \n                // onMouseOver= { (e) => {\n                //     e.target.openPopup();\n                // }}\n                // onMouseOut= { (e) => {\n                //     // e.target.closePopup();\n                // }}\n            >\n            {/* { this.renderPopUp(atm) } */}\n            </Marker>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarker.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        \n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarker));\n  ","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport ATMMarker from '../../components/Leaflet/ATMMarker';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\nimport { jetco, hangseng, hsbc } from '../../constants/networks';\nimport {\n    toggleATMDetailDialog,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions';\n\nconst drawerWidth = 420\n\nconst styles = theme => ({\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: 'calc(100% - 420px)',\n        height: '100%',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        paddingTop: '64px'\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n     },\n     subHeader: {\n        height: '28px'\n     },\n     networkAvatar: {\n        width: '60px',\n        height: '60px',\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n     }\n});\n\nclass ATMDetailContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 16,\n            isMapInit: false\n        }\n    }\n\n    componentDidMount() {\n        const { selectedLocation, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length == 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n            this.setState({selectedLocation: selectedPosition})\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length == 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n            this.setState({currentLocation: currentPosition})\n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    renderDrawer = () => {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <div className={classes.toolbar} />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n                    { this.renderDrawerContent() }\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n\n    renderNetworkAvatar = (Network) => {\n        // TODO: Change to network icons instead of letter avatars\n        const { classes } = this.props;\n        let network = ''\n        switch (Network) {\n            case jetco.idx:\n                network = 'J';\n                break;\n            case hangseng.idx:\n                network = 'HS';\n                break;\n            case hsbc.idx:\n                network = 'HSBC';\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <ListItemAvatar>\n                <Avatar className={classes.networkAvatar}>{ network }</Avatar>\n            </ListItemAvatar>\n        );\n    }\n\n    renderListItem = (subheader, value) => {\n        const { classes } = this.props;\n        return (\n            <List  \n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={classes.subHeader}>{subheader}</ListSubheader>}\n                className={classes.listRoot}\n                >\n                <ListItem>\n                    {value}\n                </ListItem>\n            </List>\n        );\n    }\n\n    renderDrawerContent = () => {\n        const { atm: { ATMName, ATMAddress: { CountryCode, TerritoryName, DistrictName, AddressLine, LatitudeDescription, LongitudeDescription }, BranchName, HotlineNumber, distance, Network}, classes } = this.props;\n        return (\n            <React.Fragment>\n                <List className={classes.listRoot}>\n                    <ListItem alignItems=\"flex-start\">\n                        { this.renderNetworkAvatar(Network) }\n                        <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                ({ LatitudeDescription },{ LongitudeDescription })\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                </List>\n\n                { this.renderListItem('District', CountryCode + ' > ' + TerritoryName + ' > ' + DistrictName) }\n                { this.renderListItem('Address', AddressLine) }\n                {/* TODO: Services */}\n                {/* TODO: Opening Hours */}\n                { this.renderListItem('Hotline Number', HotlineNumber) }\n                { this.renderListItem('Distance', distance) }\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { atm, classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n       let zoomLvlToUse = selectedZoomLvl;\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n        \n        return (\n            <React.Fragment>\n                { this.renderDrawer() }\n                <div className={classes.content}> \n                    <Map \n                        className={classes.mapContainer}\n                        center={selectedLocation} \n                        zoom= {zoomLvlToUse}\n                        maxZoom={18}\n                        // dragging={false}\n                        ref={this.saveMap}>\n\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https:{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        {/* <ATMMarkerClusterGroup/> */}\n                        <Marker position={currentLocation} icon={icon}/>\n                        <ATMMarker atm={atm}/>\n                    </Map>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContent.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMDetailContent));\n  ","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMDetailContent from './ATMDetailContent';\nimport {\n    toggleATMDetailDialog\n} from '../../actions';\n\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    root: {\n        display: 'flex',\n    }\n});\n\nclass ATMItemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           \n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    render() {\n        const { atm, classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar className={classes.appBar} position=\"fixed\" color=\"secondary\">\n                    <Toolbar>\n                        <IconButton  onClick={this.handleDialogClose} aria-label=\"Close\">\n                        <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            {atm.ATMName}\n                        </Typography>\n                    </Toolbar>\n                    </AppBar>\n                    <ATMDetailContent atm={atm} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItemDetail.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDetail));\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport ATMItemDetail from '../ATMDetail/ATMItemDetail';\n\nconst styles = {\n\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ATMItemDialog extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { classes, atm } = this.props;\n    \n    if(!this.props.selectedLocation || !atm) {\n      return (null);\n    }\n\n    const idx = this.props.selectedLocation.idx;\n\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open}\n        onClose={this.handleDialogClose}\n        TransitionComponent={Transition}\n      >\n       {/* TODO: Investigate idx = -1. Prolly due to zoomLevel */}\n       { idx > -1 && atm &&  <ATMItemDetail atm={atm[idx]}/> }\n      </Dialog>\n    );\n  }\n}\n\nATMItemDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  atm: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      atm: state.atm.data,\n      open: state.page.open,\n      selectedLocation: state.location.selectedLocation\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    \n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDialog));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMItem from './ATMItem';\nimport ATMItemDialog from './ATMItemDialog';\n\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mobileOpen: false,\n    };\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderATMItems = () => {\n    const allATMs = this.props.atm;\n    if(allATMs == undefined) {\n      return <div>Loading</div>\n    }\n\n    if(allATMs.length > 0) {\n      return allATMs.map((atm, idx) => {\n        return (\n            <React.Fragment key={idx}>\n                <ATMItem atm={atm} idx={idx}/>\n                <Divider />\n            </React.Fragment>\n        );\n    });\n    } else {\n      return <div>No ATM data</div>\n    }\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const drawer = (\n      <React.Fragment>\n        <List>\n            {this.renderATMItems()}\n        </List>\n        <ATMItemDialog/>\n      </React.Fragment>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n        </nav>\n    </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","import { isArray } from \"util\";\nimport {\n  SERVICE_BILL_PAYMENT, SERVICE_CASH_DEPOSIT, SERVICE_CASH_WITHDRAWAL, SERVICE_CHEQUE_DEPOSIT, SERVICE_COIN_SORT,\n  SERVICE_DISABLED_ACCESS, SERVICE_FOREIGN_CURRENCY\n} from '../constants/services';\n\nimport * as banks from '../constants/banks';\nimport * as networks from '../constants/networks';\nimport * as moment from 'moment';\n\nclass ATM {\n  Bank = \"\";\n  Network = \"\";\n  ATMName = \"\";\n  HotlineNumber = \"\";\n  ATMAddress = {\n    CountryCode: \"HK\",\n    TerritoryName: \"\",\n    DistrictName: \"\",\n    AddressLine: [],\n    LatitudeDescription: 0,\n    LongitudeDescription: 0,\n  };\n  ATMServices = {\n    CoinSortIndicator: false,\n    ForeignCurrencyIndicator: false,\n    DisabledAccessIndicator: false,\n    BillPaymentIndicator: false,\n    CashWithdrawalIndicator: false,\n    CashDepositIndicator: false,\n    ChequeDepositIndicator: false\n  };\n  OpeningHours = [];\n\n  constructor(record) {\n    copyFields(this, record);\n  }\n\n  isServiceAvaliable(serviceKey) {\n    if (serviceKey === SERVICE_COIN_SORT) {\n       return this.isServiceIndicatorReturnTrue('CoinSortIndicator');\n    } else if (serviceKey === SERVICE_FOREIGN_CURRENCY) {\n      return this.isServiceIndicatorReturnTrue('ForeignCurrencyIndicator');\n    } else if (serviceKey === SERVICE_DISABLED_ACCESS) {\n      return this.isServiceIndicatorReturnTrue('DisabledAccessIndicator');\n    } else if (serviceKey === SERVICE_BILL_PAYMENT) {\n      return this.isServiceIndicatorReturnTrue('BillPaymentIndicator');\n    } else if (serviceKey === SERVICE_CASH_WITHDRAWAL) {\n      return this.isServiceIndicatorReturnTrue('CashWithdrawalIndicator');\n    } else if (serviceKey === SERVICE_CASH_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('CashDepositIndicator');\n    } else if (serviceKey === SERVICE_CHEQUE_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('ChequeDepositIndicator');\n    }\n  }\n\n  isServiceIndicatorReturnTrue(field) {\n    return this.ATMServices\n      && this.ATMServices[field] !== undefined\n      && this.ATMServices[field] === true;\n  }\n\n  isOpenNow() {\n    const dayOfWeek = moment().format('dddd');\n    const openingHour = this.OpeningHours.find(oh => oh.OpenDayDescription === dayOfWeek);\n    if (!openingHour) {\n      return null;\n    }\n    const openTime = moment(openingHour.OpenTime, 'HH:mm');\n    const closeTime = moment(openingHour.CloseTime, 'HH:mm');\n    return moment().isBetween(openTime, closeTime);\n  }\n}\n\n\n\nfunction copyFields(copyTo, copyFrom) {\n  for (const field of Object.keys(copyTo)) {\n    if (copyFrom && copyFrom.hasOwnProperty(field)) {\n      if (typeof (copyFrom[field]) !== 'object' || isArray(copyFrom[field])) {\n        copyTo[field] = copyFrom[field];\n      } else {\n        copyFields(copyTo[field], copyFrom[field]);\n      }\n    }\n  }\n}\n\nexport class HangSengATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hangSeng.idx;\n    this.Network = networks.hangseng.idx;\n\n    if (record.ATMServices.AutomatedTellerMachineOperatingHour === '24-hours') {\n      this.OpeningHours = createGenericOpeningHours(\"00:00\", \"23:59\");\n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Around 06:00 - midnight 01:00 (Follows Station First/Last Trains Service Hours)') {\n      // TODO: fix this\n      this.OpeningHours = createGenericOpeningHours(\"06:00\", \"23:59\");\n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Subject to Mall Opening Hours') {\n      // Just give a generic mall open/close time\n      this.OpeningHours = createGenericOpeningHours(\"10:00\", \"20:00\");\n    }\n\n    this.ATMServices.CashDepositIndicator = record.ATMServices.CashDepositMachineIndicator;\n    this.ATMServices.ChequeDepositIndicator = record.ATMServices.ChequeDepositMachineIndicator;\n    this.ATMServices.ForeignCurrencyIndicator =\n        record.ATMServices.RMBandForeignCurrencyATMIndicator\n        && !record.ATMServices.RMBATMwithoutForeignCurrencyIndicator;\n\n  }\n}\n\nexport class HsbcATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hsbc.idx;\n    this.Network = networks.hsbc.idx;\n  }\n}\n\nconst WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday' ,'Thursday' ,'Friday' ,'Saturday' ,'Sunday']\nfunction createGenericOpeningHours(openTime, closeTime) {\n  return WEEK_DAYS.map(weekday => ({\n    OpenDayDescription: weekday,\n    OpenTime: openTime,\n    CloseTime: closeTime\n  }));\n}","import HANG_SENG_DATA from '../data/hang_seng.json';\nimport HANG_SENG_LATLNG_DATA from '../data/hang_seng_latlng.json';\nimport HSBC_DATA from '../data/hsbc.json';\n\nimport { HangSengATM, HsbcATM } from './../models/atm';\n\nexport const loadAllData = () => {\n\n  return [...loadHangSengData(), ...loadHSBCData()]\n\n\n}\n\nfunction loadHSBCData() {\n  const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n  return hsbcATMs.map(atm => new HsbcATM(atm));\n}\n\nfunction loadHangSengData() {\n  const atms = [];\n\n  const rawData = HANG_SENG_DATA.data[0].Brand[0].ATM;\n  let hangSengLatLngLUT = {};\n  for (let i = 0; i < HANG_SENG_LATLNG_DATA.length; i++) {\n    let rec = HANG_SENG_LATLNG_DATA[i];\n    hangSengLatLngLUT[rec.address] = { 'lat': rec.lat, 'lng': rec.lng };\n  }\n  for (let i = 0; i < rawData.length; i++) {\n    let rec = rawData[i];\n    let latlng = hangSengLatLngLUT[rec.ATMAddress.AddressLine[0]];\n    if (latlng) {\n      rec.ATMAddress.LatitudeDescription = latlng.lat;\n      rec.ATMAddress.LongitudeDescription = latlng.lng;\n    }\n\n    atms.push(new HangSengATM(rec));\n\n  }\n\n  return atms;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport ATMSearch from '../../components/ATMFilter/ATMSearch';\nimport ATMFilterPanel from '../../components/ATMFilter/ATMFilterPanel';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport { loadAllData } from '../../utils/dataLoader';\n\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n\n  };\n\nclass LandingListView extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const me = this;\n\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n                me.props.setCurrentLocation(position.coords.latitude, position.coords.longitude);\n                me.props.setSelectedLocation(position.coords.latitude, position.coords.longitude);\n                me.sortATMData();\n             }, (err) => {\n               // cannot get location, sort data anyway\n                me.sortATMData();\n             },{ timeout:2000 });\n        } else {\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n\n        const allATMs = loadAllData();\n        this.props.setATMData(allATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n        if(atm) {\n            if(this.props.currentLocation != undefined) {\n                location = this.props.currentLocation\n            }\n\n            const sortedAllATMs = [].concat(atm)\n             .sort( (x, y) => {\n                if(x.ATMAddress.LatitudeDescription != null && x.ATMAddress.LongitudeDescription != null &&\n                    y.ATMAddress.LatitudeDescription != null && y.ATMAddress.LongitudeDescription != null ) {\n                        const distanceX = distanceBetweenTwoGeoPoints(location.lat, location.lng, x.ATMAddress.LatitudeDescription, x.ATMAddress.LongitudeDescription);\n                        const distanceY = distanceBetweenTwoGeoPoints(location.lat, location.lng, y.ATMAddress.LatitudeDescription, y.ATMAddress.LongitudeDescription);\n                        return distanceX > distanceY ? 1 : -1;\n                    }\n                return -1;\n            })\n            .map( (atm) => {\n                atm.distance = distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription);\n                return atm;\n            });\n\n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ATMSearch/>\n                <ATMFilterPanel/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nconst\nmapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingListView));","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport App from './containers/App/App';\nimport Landing from './containers/Landing/Landing';\nimport LandingListView from './containers/Landing/LandingListView';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <div>\n                <Route path='/' component={App(LandingListView)}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA, TOGGLE_FILTER_OPTION\n} from '../actions/types';\nimport {\n  SERVICES\n} from '../constants/services';\n\nconst atmDataReducer = (state={\n  filters: {},\n  data: [],\n}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data, raw_data: action.data};\n        case TOGGLE_FILTER_OPTION:\n            const filters = {...state.filters, [action.key]: action.value };\n            return {...state, filters, data: filterData(state.raw_data, filters)};\n        default:\n            return state;\n    }\n}\n\n\nconst filterData = (atms, filter) => {\n  return atms.filter( atm => {\n    const shouldFilter = true;\n    for (const key of Object.keys(filter)) {\n      const value = filter[key];\n      if (\n        (SERVICES.includes(key) && value === true && !atm.isServiceAvaliable(key))\n        || (key === 'bank' && value !== 'all' && value !== atm.Bank)\n        || (key === 'network' && value !== 'all' && value !== atm.Network)\n        || (key === 'Opening' && value === true && atm.isOpenNow() === false) // DISCUSSION: this will show also the unknown atm as well\n        || (key === 'Closed' && value === true && atm.isOpenNow() === true)) {\n          return false\n        }\n    }\n    return shouldFilter;\n  })\n}\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng, idx: action.idx }, selectedZoomLvl : (action.zoomLvl==-1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import {\n    TOGGLE_ATM_DETAIL_DIALOG\n} from '../actions/types';\n\nconst pageReducer = (state={}, action) => {\n    switch (action.type) {\n        case TOGGLE_ATM_DETAIL_DIALOG:\n            return {...state, open: action.open};\n        default:\n            return state;\n    }\n}\n\nexport default pageReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer,\n    page: pageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\nimport css from './static/main.css';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}