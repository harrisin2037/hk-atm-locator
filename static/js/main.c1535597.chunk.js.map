{"version":3,"sources":["static/images/you_are_here.png","containers/AppNavbar/AppNavbar.js","containers/App/App.js","utils/geoUtils.js","components/ATMFilter/ATMSearch.js","constants/banks.js","constants/networks.js","constants/services.js","actions/index.js","actions/types.js","components/ATMFilter/ATMFilterPanel.js","components/ATMListing/ATMItem.js","components/Leaflet/ATMMarker.js","components/ATMDetail/ATMDetailContent.js","components/ATMDetail/ATMItemDetail.js","components/ATMListing/ATMItemDialog.js","components/ATMListing/ATMListing.js","models/atm.js","utils/dataLoader.js","containers/Landing/LandingListView.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/pageReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","appBar","alignItems","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","theme","createMuiTheme","typography","useNextVariants","App","WrappedComponent","_Component","AppHOC","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MuiThemeProvider_default","AppNavbar_AppNavbar","location","style","marginTop","zIndex","Component","distanceBetweenTwoGeoPoints","lat1","lng1","lat2","lng2","dLat","Math","PI","dlng","sin","cos","atan2","sqrt","distanceConverter","distance","round","padding","display","width","borderBottomRightRadius","borderBottomLeftRadius","input","marginLeft","flex","iconButton","divider","height","margin","Paper_default","elevation","InputBase_default","placeholder","IconButton_default","aria-label","Search_default","Divider_default","Directions_default","hsbc","idx","en","zh","hangSeng","jetco","hangseng","networks","SERVICE_COIN_SORT","api_idx","tc","SERVICE_FOREIGN_CURRENCY","SERVICE_DISABLED_ACCESS","SERVICE_BILL_PAYMENT","SERVICE_CASH_WITHDRAWAL","SERVICE_CASH_DEPOSIT","SERVICE_CHEQUE_DEPOSIT","SERVICES","WEEK_DAYS","setSelectedLocation","lat","lng","zoomLvl","length","undefined","dispatch","type","dispatchSetSelectedLocation","setCurrentLocation","dispatchSetCurrentLocation","toggleATMDetailDialog","open","dispatchToggleATMDetailDialog","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ATMFilterPanel","_this","call","state","network","bank","event","toggleFilterOption","target","name","checked","_this$props","filters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","handleSelectChange","bind","inputProps","id","MenuItem_default","map","index","_this$props2","_this2","services","component","FormLabel_default","FormGroup_default","service","FormControlLabel_default","control","Switch_default","handleCheckboxChange","label","_this3","days","day","_this4","option","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","column","heading","ExpansionPanelDetails_default","details","renderNetworkSelect","renderBankSelect","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","connect","ownProps","atm","dispatchToggleFilterOption","ATMItem","alt","Bank","src","bankIcon","isOpenNow","Fragment","Chip_default","chip","isNaN","concat","_atm$ATMAddress","ATMAddress","LatitudeDescription","LongitudeDescription","ATMName","ListItem_default","button","onClick","atmListItemOnClick","renderBankIcon","ListItemText_default","primary","secondary","AddressLine","renderDistance","renderOpeningClosingTag","React","borderRadius","marginRight","withTheme","ATMMarker","data","Popup","CardContent_default","popUpContent","title","gutterBottom","pos","BranchName","HotlineNumber","latitude","longitude","Marker","renderMarkerClusterGroup","&:last-child","paddingBottom","ATMDetailContent","handleDialogClose","saveMap","setState","isMapInit","renderDrawer","toolbar","Drawer_default","drawer","paper","drawerPaper","renderDrawerContent","renderNetworkIcon","renderServiceList","renderListItem","subheader","List_default","ListSubheader_default","subHeader","listRoot","_this$props$atm","ATMServices","_this$props$atm$ATMAd","CountryCode","TerritoryName","DistrictName","Network","inline","selectedLocation","currentLocation","zoom","selectedPosition","currentPosition","keys","_this$props3","selectedZoomLvl","icon","L","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","zoomLvlToUse","content","Map","mapContainer","center","maxZoom","ref","TileLayer","attribution","url","Leaflet_ATMMarker","top","flexShrink","paddingTop","mixins","maxWidth","backgroundColor","palette","background","networkAvatar","deepOrange","ATMItemDetail","Close_default","ATMDetail_ATMDetailContent","Transition","Slide_default","assign","direction","ATMItemDialog","Dialog_default","fullScreen","onClose","TransitionComponent","ATMDetail_ATMItemDetail","page","ATMListing","handleDrawerToggle","mobileOpen","renderATMItems","allATMs","ATMListing_ATMItem","ATMListing_ATMItemDialog","CssBaseline_default","spacing","unit","ATM","record","CoinSortIndicator","ForeignCurrencyIndicator","DisabledAccessIndicator","BillPaymentIndicator","CashWithdrawalIndicator","CashDepositIndicator","ChequeDepositIndicator","OpeningHours","copyFields","copyTo","copyFrom","_arr","_i","field","hasOwnProperty","isArray","serviceKey","isServiceIndicatorReturnTrue","dayOfWeek","moment","format","openingHour","find","oh","OpenDayDescription","openTime","OpenTime","closeTime","CloseTime","isBetween","HangSengATM","_ATM","banks","AutomatedTellerMachineOperatingHour","createGenericOpeningHours","CashDepositMachineIndicator","ChequeDepositMachineIndicator","RMBandForeignCurrencyATMIndicator","RMBATMwithoutForeignCurrencyIndicator","HsbcATM","_ATM2","weekday","loadAllData","toConsumableArray","atms","rawData","HANG_SENG_DATA","Brand","hangSengLatLngLUT","i","HANG_SENG_LATLNG_DATA","rec","address","latlng","push","loadHangSengData","HSBC_DATA","LandingListView","initATMData","detectCurrentLocation","me","navigator","geolocation","getCurrentPosition","coords","sortATMData","err","timeout","setATMData","sortedAllATMs","sort","x","y","ATMFilter_ATMSearch","ATMFilter_ATMFilterPanel","components_ATMListing_ATMListing","atmData","dispatchSetATMData","Routes","Route","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","filterData","filter","includes","isServiceAvaliable","atmDataReducer","action","objectSpread","raw_data","defineProperty","locationReducer","pageReducer","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.c1535597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    alignItems: 'center',\n  }\n};\n\nfunction AppNavbar(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Hong Kong ATM Locator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppNavbar);","import React, { Component } from 'react';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = (WrappedComponent) => {\n  class AppHOC extends Component {\n    render() {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <div>\n              <AppNavbar location={this.props.location}/>\n              <div style={{marginTop: '64px', zIndex: '1200'}}>\n                <WrappedComponent/>\n              </div>\n          </div>\n        </MuiThemeProvider>\n      );\n    }\n  }\n  return AppHOC;\n}\n\nexport default App;","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nconst distanceConverter = (distance) => {\n\tif(!distance) {\n\t\treturn null;\n\t}\n\treturn distance > 1 ? Math.round(distance) + 'km' : Math.round(distance * 1000) + 'm';\n}\n\nexport {\n    distanceBetweenTwoGeoPoints,\n\tdistanceConverter\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    zIndex: 1200,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction ATMSearch(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <InputBase className={classes.input} placeholder=\"Search ...\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nATMSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ATMSearch);","export const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n}\n\nexport const hangSeng = {\n    idx: 'hangSeng',\n    en: 'Hang Seng Bank',\n    zh: ''\n}\n\nexport const bochk = {\n    idx: 'bochk',\n    en: 'Bank of China(Hong Kong) Limited',\n    zh: ''\n}\n\nexport const bankcomm = {\n    idx: 'bankcomm',\n    en: 'Bank of Communications (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cncbinternational = {\n    idx: 'cncbinternational',\n    en: 'China CITIC Bank International Limited',\n    zh: ''\n}\n\nexport const asiaccb = {\n    idx: 'asiaccb',\n    en: 'China Construction Bank (Asia) Corporation Limited',\n    zh: ''\n}\n\nexport const cmbchina = {\n    idx: 'cmbchina',\n    en: 'China Merchants Bank Hong Kong Branch',\n    zh: ''\n}\n\nexport const chiyubank = {\n    idx: 'chiyubank',\n    en: 'Chiyu Banking Corporation Limited',\n    zh: ''\n}\n\nexport const chonghingbank = {\n    idx: 'chonghingbank',\n    en: 'Chong Hing Bank Limited',\n    zh: ''\n}\n\nexport const citibank = {\n    idx: 'citibank',\n    en: 'Citibank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cmbwinglungbank = {\n    idx: 'cmbwinglungbank',\n    en: 'CMB Wing Lung Bank Limited',\n    zh: ''\n}\n\nexport const dahsing = {\n    idx: 'dahsing',\n    en: 'Dah Sing Bank, Limited',\n    zh: ''\n}\n\nexport const dbs = {\n    idx: 'dbs',\n    en: 'DBS Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const fubonbank = {\n    idx: 'fubonbank',\n    en: 'Fubon Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const icbcasia = {\n    idx: 'icbcasia',\n    en: 'Industrial and Commercial Bank of China (Asia) Limited',\n    zh: ''\n}\n\nexport const ocbcwhhk = {\n    idx: 'ocbcwhhk',\n    en: 'OCBC Wing Hang Bank',\n    zh: ''\n}\n\nexport const publicbank = {\n    idx: 'publicbank',\n    en: 'Public Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const shacombank = {\n    idx: 'shacombank',\n    en: 'Shanghai Commercial Bank Limited',\n    zh: ''\n}\n\nexport const nanyang = {\n    idx: 'shacombank',\n    en: 'Nanyang Commercial Bank Limited',\n    zh: ''\n}\n\nexport const standardchartered = {\n    idx: 'standardchartered',\n    en: 'Standard Chartered Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const hkbea = {\n    idx: 'hkbea',\n    en: 'The Bank of East Asia',\n    zh: ''\n}\n\nexport const jetco = [\n    bochk,\n    bankcomm,\n    cncbinternational,\n    asiaccb,\n    cmbchina,\n    chiyubank,\n    chonghingbank,\n    citibank,\n    cmbwinglungbank,\n    dahsing,\n    dbs,\n    fubonbank,\n    icbcasia,\n    ocbcwhhk,\n    nanyang,\n    publicbank,\n    shacombank,\n    standardchartered,\n    hkbea\n]","export const jetco = {\n    idx: 'jetco',\n    en: 'Jetco',\n    zh: ''\n};\n\nexport const hangseng = {\n    idx: 'hangseng',\n    en: 'Hang Seng',\n    zh: ''\n};\n\nexport const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n};\n\nexport const networks = [\n    jetco,\n    hangseng,\n    hsbc\n]","export const SERVICE_COIN_SORT = {\n  idx: 'coin_sort',\n  api_idx: 'CoinSortIndicator',\n  en: 'Coin Sort',\n  tc: ''\n};\n\nexport const SERVICE_FOREIGN_CURRENCY = {\n  idx: 'foreign_currency',\n  api_idx: 'ForeignCurrencyIndicator',\n  en: 'Foreign Currency',\n  tc: ''\n};\n\nexport const SERVICE_DISABLED_ACCESS = {\n  idx: 'disabled_access',\n  api_idx: 'DisabledAccessIndicator',\n  en: 'Disabled Access',\n  tc: ''\n};\n\nexport const SERVICE_BILL_PAYMENT = {\n  idx: 'bill_payment',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Bill Payment',\n  tc: ''\n};\n\nexport const SERVICE_CASH_WITHDRAWAL = {\n  idx: 'cash_withdrawal',\n  api_idx: 'CashWithdrawalIndicator',\n  en: 'Cash Withdrawal',\n  tc: ''\n};\n\nexport const SERVICE_CASH_DEPOSIT = {\n  idx: 'cash_deposit',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Cash Deposit',\n  tc: ''\n};\n\nexport const SERVICE_CHEQUE_DEPOSIT = {\n  idx: 'cheque_deposit',\n  api_idx: 'ChequeDepositIndicator',\n  en: 'Cheque Deposit',\n  tc: ''\n};\n\nexport const SERVICES = [\n  SERVICE_COIN_SORT,\n  SERVICE_FOREIGN_CURRENCY,\n  SERVICE_DISABLED_ACCESS,\n  SERVICE_BILL_PAYMENT,\n  SERVICE_CASH_WITHDRAWAL,\n  SERVICE_CASH_DEPOSIT,\n  SERVICE_CHEQUE_DEPOSIT\n];\n\nexport const WEEK_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION,\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_FILTER_OPTION,\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, idx, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, idx: idx, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nconst dispatchToggleATMDetailDialog = (open) => {\n    return {type: TOGGLE_ATM_DETAIL_DIALOG, open: open}\n}\n\nconst dispatchToggleFilterOption = (key, value) => {\n  return {type: TOGGLE_FILTER_OPTION, key, value}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, idx, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, idx, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}\n\nexport const toggleATMDetailDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMDetailDialog(open))\n    }\n}\n\nexport const toggleFilterOption = (key, value) => {\n  return dispatch => {\n    dispatch(dispatchToggleFilterOption(key, value));\n  }\n}","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\nexport const TOGGLE_ATM_DETAIL_DIALOG = 'TOGGLE_ATM_DETAIL_DIALOG';\nexport const TOGGLE_FILTER_OPTION = 'TOGGLE_FILTER_OPTION';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { jetco } from '../../constants/banks';\nimport { networks } from '../../constants/networks';\nimport { connect } from 'react-redux';\nimport { SERVICES, WEEK_DAYS } from '../../constants/services';\n\n\nimport {\n  toggleFilterOption\n} from '../../actions'\n\n\nconst styles = {\n    root: {\n        width: '100%',\n      },\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all'\n    }\n  }\n\n  handleSelectChange(event) {\n      // this.setState({ [event.target.name]: event.target.value });\n      this.props.toggleFilterOption(event.target.name, event.target.value);\n  };\n\n  handleCheckboxChange(name) {\n      return function(event){\n          // this.setState({ [name]: event.target.checked });\n          this.props.toggleFilterOption(name, event.target.checked);\n      }\n  };\n\n  renderNetworkSelect() {\n    const { classes, filters: { network }} = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={network === undefined ? 'all' : network}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n              {\n                networks.map((network, index) => {\n                  return (\n                    <MenuItem value={network.idx} key={index}>\n                      {network.en}\n                    </MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    /*\n      TODO: the value s restricted based on Network\n    */\n    const { classes, filters: { bank } } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={bank === undefined ? 'all' : bank}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n            {\n              jetco.map((bank, index) => {\n                return (\n                  <MenuItem value={bank.idx} key={index}>\n                    {bank.en}\n                  </MenuItem>\n                );\n              })\n            }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const services = SERVICES;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             services.map((service, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[service]}\n                      onChange={this.handleCheckboxChange(service).bind(this)}\n                      value={service.en}\n                    />\n                  }\n                  label={service.en}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = WEEK_DAYS;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day).bind(this)}\n                      value={day}\n                    />\n                  }\n                  label={day}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <div></div>\n      /*\n        TODO:\n      */\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option).bind(this)}\n                    value={option}\n                  />\n                }\n                label={option}\n                key={index}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    /*\n      TODO: Add Grid for responsive design\n    */\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <div className={classes.column}>\n                <Typography className={classes.heading}>Filter</Typography>\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n                { this.renderNetworkSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderBankSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderServicesCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningDayCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningHourCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningOrClosingCheckbox() }\n                <Divider variant=\"middle\" />\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n      );\n  }\n}\n\nATMFilterPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst\nmapStateToProps = (state, ownProps) => {\n    return {\n      filters: state.atm.filters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleFilterOption: (key, value) => {\n            dispatch(toggleFilterOption(key, value));\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMFilterPanel));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceConverter } from '../../utils/geoUtils';\n\nimport {\n    setSelectedLocation,\n    toggleATMDetailDialog\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0,\n        width: '100px',\n    },\n    bankIcon: {\n      width: '50px',\n      height: '50px',\n      marginRight: '20px',\n    }\n});\n\nclass ATMItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderBankIcon(atm) {\n      const { classes } = this.props;\n      return (\n        <img alt={atm.Bank} src={atm.Bank + \".png\"} className={classes.bankIcon}></img>\n      )\n    }\n\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distanceConverter(distance);\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n\n    atmListItemOnClick(atm, idx) {\n        const { ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n        if(LatitudeDescription && LongitudeDescription){\n            this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription, idx);\n        }\n\n        // toggle detail page\n        this.props.toggleATMDetailDialog(true);\n    }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMAddress, distance } = atm;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={ idx } onClick={() => this.atmListItemOnClick(atm, idx)}>\n                    { this.renderBankIcon(atm) }\n                    <div>\n                      <ListItemText\n                          primary={ ATMName }\n                          secondary={\n                              <React.Fragment>\n                                  { ATMAddress.AddressLine }\n                                  <br/>\n                                  { this.renderDistance(distance) }\n\n                              </React.Fragment>\n                          }\n                      />\n                      <div style={{display: 'flex'}}>\n                      { this.renderOpeningClosingTag(atm) }\n                      </div>\n\n\n                    </div>\n                </ListItem>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng, idx) => {\n            dispatch(setSelectedLocation(lat, lng, idx))\n        },\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarker extends React.Component {\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n\n        const latitude = atm.ATMAddress.LatitudeDescription;\n        const longitude = atm.ATMAddress.LongitudeDescription;\n        return (\n            <Marker\n                position= { [latitude, longitude] }\n                // onMouseOver= { (e) => {\n                //     e.target.openPopup();\n                // }}\n                // onMouseOut= { (e) => {\n                //     // e.target.closePopup();\n                // }}\n            >\n            {/* { this.renderPopUp(atm) } */}\n            </Marker>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarker.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarker));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport ATMMarker from '../../components/Leaflet/ATMMarker';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\nimport { jetco, hangseng, hsbc } from '../../constants/networks';\nimport { distanceConverter } from '../../utils/geoUtils';\nimport { SERVICES } from '../../constants/services';\nimport {\n    toggleATMDetailDialog,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions';\n\nconst drawerWidth = 420\n\nconst styles = theme => ({\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: 'calc(100% - 420px)',\n        height: '100%',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        paddingTop: '64px'\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n     },\n     subHeader: {\n        height: '28px'\n     },\n     networkAvatar: {\n        width: '60px',\n        height: '60px',\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n     },\n     bankIcon: {\n      width: '50px',\n      height: '50px',\n    }\n});\n\nclass ATMDetailContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 16,\n            isMapInit: false\n        }\n    }\n\n    componentDidMount() {\n        const { selectedLocation, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length === 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n            this.setState({selectedLocation: selectedPosition})\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length === 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n            this.setState({currentLocation: currentPosition})\n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    renderDrawer = () => {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <div className={classes.toolbar} />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n                    { this.renderDrawerContent() }\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n\n    renderNetworkIcon = (bank) => {\n        const { classes } = this.props;\n        return (\n            <img alt={bank} src={bank + \".png\"} className={classes.bankIcon}></img>\n        );\n    }\n\n    // TODO: revise UI\n    renderServiceList = (services) => {\n        // const { BillPaymentIndicator, CashDepositIndicator, CashWithdrawalIndicator, ChequeDepositIndicator, CoinSortIndicator, DisabledAccessIndicator, ForeignCurrencyIndicator } = services;\n        return SERVICES.map((service, idx) => {\n            return (\n                <React.Fragment>\n                    { service.en }: { services[service.api_idx] ? 'Y' : 'N' } <br/>\n                </React.Fragment>\n            );\n        });\n    }\n\n    renderListItem = (subheader, value) => {\n        const { classes } = this.props;\n\n        if(!subheader && !value) {\n            return (null);\n        }\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={classes.subHeader}>{subheader}</ListSubheader>}\n                className={classes.listRoot}\n                >\n                <ListItem>\n                    {value}\n                </ListItem>\n            </List>\n        );\n    }\n\n    renderDrawerContent = () => {\n        const { atm: { ATMName, ATMServices, ATMAddress: { CountryCode, TerritoryName, DistrictName, AddressLine, LatitudeDescription, LongitudeDescription }, Bank, HotlineNumber, distance, Network}, classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <List className={classes.listRoot}>\n                    <ListItem alignItems=\"flex-start\">\n                        { this.renderNetworkIcon(Bank) }\n                        <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                ({ LatitudeDescription },{ LongitudeDescription })\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                </List>\n\n                { this.renderListItem('District', CountryCode + ' > ' + TerritoryName + ' > ' + DistrictName) }\n                { this.renderListItem('Address', AddressLine) }\n                { this.renderListItem('Services', this.renderServiceList(ATMServices)) }\n                {/* TODO: Opening Hours */}\n                { this.renderListItem('Hotline Number', HotlineNumber) }\n                { this.renderListItem('Distance', distanceConverter(distance)) }\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { atm, classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n       let zoomLvlToUse = selectedZoomLvl;\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                { this.renderDrawer() }\n                <div className={classes.content}>\n                    <Map\n                        className={classes.mapContainer}\n                        center={selectedLocation}\n                        zoom= {zoomLvlToUse}\n                        maxZoom={18}\n                        // dragging={false}\n                        ref={this.saveMap}>\n\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https:{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        {/* <ATMMarkerClusterGroup/> */}\n                        <Marker position={currentLocation} icon={icon}/>\n                        <ATMMarker atm={atm}/>\n                    </Map>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContent.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMDetailContent));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMDetailContent from './ATMDetailContent';\nimport {\n    toggleATMDetailDialog\n} from '../../actions';\n\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    root: {\n        display: 'flex',\n    }\n});\n\nclass ATMItemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           \n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    render() {\n        const { atm, classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar className={classes.appBar} position=\"fixed\" color=\"secondary\">\n                    <Toolbar>\n                        <IconButton  onClick={this.handleDialogClose} aria-label=\"Close\">\n                        <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            {atm.ATMName}\n                        </Typography>\n                    </Toolbar>\n                    </AppBar>\n                    <ATMDetailContent atm={atm} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItemDetail.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDetail));\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport ATMItemDetail from '../ATMDetail/ATMItemDetail';\n\nconst styles = {\n\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ATMItemDialog extends React.Component {\n\n  render() {\n    const { atm } = this.props;\n\n    if(!this.props.selectedLocation || !atm) {\n      return (null);\n    }\n\n    const idx = this.props.selectedLocation.idx;\n\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open}\n        onClose={this.handleDialogClose}\n        TransitionComponent={Transition}\n      >\n       {/* TODO: Investigate idx = -1. Prolly due to zoomLevel */}\n       { idx > -1 && atm &&  <ATMItemDetail atm={atm[idx]}/> }\n      </Dialog>\n    );\n  }\n}\n\nATMItemDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  atm: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      atm: state.atm.data,\n      open: state.page.open,\n      selectedLocation: state.location.selectedLocation\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDialog));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMItem from './ATMItem';\nimport ATMItemDialog from './ATMItemDialog';\n\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mobileOpen: false,\n    };\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderATMItems = () => {\n    const allATMs = this.props.atm;\n    if(allATMs === undefined) {\n      return <div>Loading</div>\n    }\n\n    if(allATMs.length > 0) {\n      return allATMs.map((atm, idx) => {\n        return (\n            <React.Fragment key={idx}>\n                <ATMItem atm={atm} idx={idx}/>\n                <Divider />\n            </React.Fragment>\n        );\n    });\n    } else {\n      return <div>No ATM data</div>\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const drawer = (\n      <React.Fragment>\n        <List>\n            {this.renderATMItems()}\n        </List>\n        <ATMItemDialog/>\n      </React.Fragment>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n        </nav>\n    </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","import { isArray } from \"util\";\nimport {\n  SERVICE_BILL_PAYMENT, SERVICE_CASH_DEPOSIT, SERVICE_CASH_WITHDRAWAL, SERVICE_CHEQUE_DEPOSIT, SERVICE_COIN_SORT,\n  SERVICE_DISABLED_ACCESS, SERVICE_FOREIGN_CURRENCY,\n  WEEK_DAYS\n} from '../constants/services';\n\nimport * as banks from '../constants/banks';\nimport * as networks from '../constants/networks';\nimport * as moment from 'moment';\n\nclass ATM {\n  Bank = \"\";\n  Network = \"\";\n  ATMName = \"\";\n  HotlineNumber = \"\";\n  ATMAddress = {\n    CountryCode: \"HK\",\n    TerritoryName: \"\",\n    DistrictName: \"\",\n    AddressLine: [],\n    LatitudeDescription: 0,\n    LongitudeDescription: 0,\n  };\n  ATMServices = {\n    CoinSortIndicator: false,\n    ForeignCurrencyIndicator: false,\n    DisabledAccessIndicator: false,\n    BillPaymentIndicator: false,\n    CashWithdrawalIndicator: false,\n    CashDepositIndicator: false,\n    ChequeDepositIndicator: false\n  };\n  OpeningHours = [];\n\n  constructor(record) {\n    copyFields(this, record);\n  }\n\n  isServiceAvaliable(serviceKey) {\n    if (serviceKey === SERVICE_COIN_SORT) {\n       return this.isServiceIndicatorReturnTrue('CoinSortIndicator');\n    } else if (serviceKey === SERVICE_FOREIGN_CURRENCY) {\n      return this.isServiceIndicatorReturnTrue('ForeignCurrencyIndicator');\n    } else if (serviceKey === SERVICE_DISABLED_ACCESS) {\n      return this.isServiceIndicatorReturnTrue('DisabledAccessIndicator');\n    } else if (serviceKey === SERVICE_BILL_PAYMENT) {\n      return this.isServiceIndicatorReturnTrue('BillPaymentIndicator');\n    } else if (serviceKey === SERVICE_CASH_WITHDRAWAL) {\n      return this.isServiceIndicatorReturnTrue('CashWithdrawalIndicator');\n    } else if (serviceKey === SERVICE_CASH_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('CashDepositIndicator');\n    } else if (serviceKey === SERVICE_CHEQUE_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('ChequeDepositIndicator');\n    }\n  }\n\n  isServiceIndicatorReturnTrue(field) {\n    return this.ATMServices\n      && this.ATMServices[field] !== undefined\n      && this.ATMServices[field] === true;\n  }\n\n  isOpenNow() {\n    const dayOfWeek = moment().format('dddd');\n    const openingHour = this.OpeningHours.find(oh => oh.OpenDayDescription === dayOfWeek);\n    if (!openingHour) {\n      return null;\n    }\n    const openTime = moment(openingHour.OpenTime, 'HH:mm');\n    const closeTime = moment(openingHour.CloseTime, 'HH:mm');\n    return moment().isBetween(openTime, closeTime);\n  }\n}\n\n\n\nfunction copyFields(copyTo, copyFrom) {\n  for (const field of Object.keys(copyTo)) {\n    if (copyFrom && copyFrom.hasOwnProperty(field)) {\n      if (typeof (copyFrom[field]) !== 'object' || isArray(copyFrom[field])) {\n        copyTo[field] = copyFrom[field];\n      } else {\n        copyFields(copyTo[field], copyFrom[field]);\n      }\n    }\n  }\n}\n\nexport class HangSengATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hangSeng.idx;\n    this.Network = networks.hangseng.idx;\n\n    if (record.ATMServices.AutomatedTellerMachineOperatingHour === '24-hours') {\n      this.OpeningHours = createGenericOpeningHours(\"00:00\", \"23:59\");\n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Around 06:00 - midnight 01:00 (Follows Station First/Last Trains Service Hours)') {\n      // TODO: fix this\n      this.OpeningHours = createGenericOpeningHours(\"06:00\", \"23:59\");\n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Subject to Mall Opening Hours') {\n      // Just give a generic mall open/close time\n      this.OpeningHours = createGenericOpeningHours(\"10:00\", \"20:00\");\n    }\n\n    this.ATMServices.CashDepositIndicator = record.ATMServices.CashDepositMachineIndicator;\n    this.ATMServices.ChequeDepositIndicator = record.ATMServices.ChequeDepositMachineIndicator;\n    this.ATMServices.ForeignCurrencyIndicator =\n        record.ATMServices.RMBandForeignCurrencyATMIndicator\n        && !record.ATMServices.RMBATMwithoutForeignCurrencyIndicator;\n\n  }\n}\n\nexport class HsbcATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hsbc.idx;\n    this.Network = networks.hsbc.idx;\n  }\n}\n\n\nfunction createGenericOpeningHours(openTime, closeTime) {\n  return WEEK_DAYS.map(weekday => ({\n    OpenDayDescription: weekday,\n    OpenTime: openTime,\n    CloseTime: closeTime\n  }));\n}","import HANG_SENG_DATA from '../data/hang_seng.json';\nimport HANG_SENG_LATLNG_DATA from '../data/hang_seng_latlng.json';\nimport HSBC_DATA from '../data/hsbc.json';\n\nimport { HangSengATM, HsbcATM } from './../models/atm';\n\nexport const loadAllData = () => {\n\n  return [...loadHangSengData(), ...loadHSBCData()]\n\n\n}\n\nfunction loadHSBCData() {\n  const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n  return hsbcATMs.map(atm => new HsbcATM(atm));\n}\n\nfunction loadHangSengData() {\n  const atms = [];\n\n  const rawData = HANG_SENG_DATA.data[0].Brand[0].ATM;\n  let hangSengLatLngLUT = {};\n  for (let i = 0; i < HANG_SENG_LATLNG_DATA.length; i++) {\n    let rec = HANG_SENG_LATLNG_DATA[i];\n    hangSengLatLngLUT[rec.address] = { 'lat': rec.lat, 'lng': rec.lng };\n  }\n  for (let i = 0; i < rawData.length; i++) {\n    let rec = rawData[i];\n    let latlng = hangSengLatLngLUT[rec.ATMAddress.AddressLine[0]];\n    if (latlng) {\n      rec.ATMAddress.LatitudeDescription = latlng.lat;\n      rec.ATMAddress.LongitudeDescription = latlng.lng;\n    }\n\n    atms.push(new HangSengATM(rec));\n\n  }\n\n  return atms;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport ATMSearch from '../../components/ATMFilter/ATMSearch';\nimport ATMFilterPanel from '../../components/ATMFilter/ATMFilterPanel';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport { loadAllData } from '../../utils/dataLoader';\n\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n\n  };\n\nclass LandingListView extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const me = this;\n\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n                me.props.setCurrentLocation(position.coords.latitude, position.coords.longitude);\n                me.props.setSelectedLocation(position.coords.latitude, position.coords.longitude);\n                me.sortATMData();\n             }, (err) => {\n               // cannot get location, sort data anyway\n                me.sortATMData();\n             },{ timeout:2000 });\n        } else {\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n\n        const allATMs = loadAllData();\n        this.props.setATMData(allATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n        if(atm) {\n            if(this.props.currentLocation !== undefined) {\n                location = this.props.currentLocation\n            }\n\n            const sortedAllATMs = [].concat(atm)\n             .sort( (x, y) => {\n                if(x.ATMAddress.LatitudeDescription != null && x.ATMAddress.LongitudeDescription != null &&\n                    y.ATMAddress.LatitudeDescription != null && y.ATMAddress.LongitudeDescription != null ) {\n                        const distanceX = distanceBetweenTwoGeoPoints(location.lat, location.lng, x.ATMAddress.LatitudeDescription, x.ATMAddress.LongitudeDescription);\n                        const distanceY = distanceBetweenTwoGeoPoints(location.lat, location.lng, y.ATMAddress.LatitudeDescription, y.ATMAddress.LongitudeDescription);\n                        return distanceX > distanceY ? 1 : -1;\n                    }\n                return -1;\n            })\n            .map( (atm) => {\n                atm.distance = distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription);\n                return atm;\n            });\n\n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ATMSearch/>\n                <ATMFilterPanel/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nconst\nmapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingListView));","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport App from './containers/App/App';\nimport LandingListView from './containers/Landing/LandingListView';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <div>\n                <Route path='/' component={App(LandingListView)}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA, TOGGLE_FILTER_OPTION\n} from '../actions/types';\nimport {\n  SERVICES, WEEK_DAYS\n} from '../constants/services';\n\nconst atmDataReducer = (state={\n  filters: {},\n  data: [],\n}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data, raw_data: action.data};\n        case TOGGLE_FILTER_OPTION:\n            const filters = {...state.filters, [action.key]: action.value };\n            return {...state, filters, data: filterData(state.raw_data, filters)};\n        default:\n            return state;\n    }\n}\n\n\nconst filterData = (atms, filter) => {\n  return atms.filter( atm => {\n    const shouldFilter = true;\n    for (const key of Object.keys(filter)) {\n      const value = filter[key];\n      if (\n        (SERVICES.includes(key) && value === true && !atm.isServiceAvaliable(key))\n        || (key === 'bank' && value !== 'all' && value !== atm.Bank)\n        || (key === 'network' && value !== 'all' && value !== atm.Network)\n        || (WEEK_DAYS.includes(key) && value === true && atm.OpeningHours.map( oh => oh.OpenDayDescription ).includes(key))\n        || (key === 'Opening' && value === true && atm.isOpenNow() === false) // DISCUSSION: this will show also the unknown atm as well\n        || (key === 'Closed' && value === true && atm.isOpenNow() === true)) {\n          return false\n        }\n    }\n    return shouldFilter;\n  })\n}\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng, idx: action.idx }, selectedZoomLvl : (action.zoomLvl === -1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import {\n    TOGGLE_ATM_DETAIL_DIALOG\n} from '../actions/types';\n\nconst pageReducer = (state={}, action) => {\n    switch (action.type) {\n        case TOGGLE_ATM_DETAIL_DIALOG:\n            return {...state, open: action.open};\n        default:\n            return state;\n    }\n}\n\nexport default pageReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer,\n    page: pageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}