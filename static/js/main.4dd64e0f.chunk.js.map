{"version":3,"sources":["static/images/you_are_here.png","containers/AppNavbar/AppNavbar.js","containers/App/App.js","components/ATMFilter/ATMSearch.js","components/ATMFilter/ATMFilterPanel.js","actions/index.js","actions/types.js","components/ATMListing/ATMItem.js","components/ATMListing/ATMListing.js","utils/geoUtils.js","containers/Landing/LandingListView.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","appBar","alignItems","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","theme","createMuiTheme","typography","useNextVariants","App","WrappedComponent","_Component","AppHOC","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MuiThemeProvider_default","AppNavbar_AppNavbar","location","style","marginTop","zIndex","Component","padding","display","width","borderBottomRightRadius","borderBottomLeftRadius","input","marginLeft","flex","iconButton","divider","height","margin","Paper_default","elevation","InputBase_default","placeholder","IconButton_default","aria-label","Search_default","Divider_default","Directions_default","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ATMFilterPanel","_this","call","handleSelectChange","event","setState","defineProperty","target","name","handleCheckboxChange","checked","state","network","bank","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","inputProps","id","MenuItem_default","banks","map","bankIndex","index","_this2","services","component","FormLabel_default","FormGroup_default","serviceIndex","FormControlLabel_default","control","Switch_default","label","_this3","day","_this4","option","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","column","heading","ExpansionPanelDetails_default","details","renderNetworkSelect","renderBankSelect","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","ExpansionPanelActions_default","Button_default","size","setSelectedLocation","lat","lng","zoomLvl","length","undefined","dispatch","type","dispatchSetSelectedLocation","ATMItem","openingHours","weekday","Date","getDay","closeTimeInHHMMFormat","CloseTime","closeTimeHour","split","closeTimeMinute","currentTime","closeTime","setHours","setMinutes","Fragment","Chip_default","chip","distance","isNaN","Math","round","concat","atm","_atm$ATMAddress","ATMAddress","LatitudeDescription","LongitudeDescription","_this$props","idx","ATMName","ListItem_default","button","onClick","atmListItemOnClick","ListItemText_default","primary","secondary","AddressLine","renderDistance","renderOpeningClosingTag","OpeningHours","React","connect","ownProps","borderRadius","withTheme","ATMListing","handleDrawerToggle","mobileOpen","renderATMItems","allATMs","ATMListing_ATMItem","drawer","List_default","CssBaseline_default","Drawer_default","paper","drawerPaper","open","data","content","spacing","unit","distanceBetweenTwoGeoPoints","lat1","lng1","lat2","lng2","dLat","PI","dlng","sin","cos","atan2","sqrt","LandingListView","handleMoveEnd","evt","latlng","selectedLocation","getZoom","saveMap","isMapInit","currentLocation","zoom","initATMData","detectCurrentLocation","me","navigator","geolocation","getCurrentPosition","setCurrentLocation","coords","latitude","longitude","sortATMData","hangSengATMs","HANG_SENG_DATA","Brand","ATM","hangSengLatLngLUT","i","HANG_SENG_LATLNG_DATA","rec","address","hsbcATMs","HSBC_DATA","toConsumableArray","setATMData","sortedAllATMs","sort","x","y","objectSpread","selectedZoomLvl","zoomLvlToUse","L","icon","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","keys","ATMFilter_ATMSearch","ATMFilter_ATMFilterPanel","components_ATMListing_ATMListing","atmData","dispatchSetATMData","dispatchSetCurrentLocation","mapContainer","top","left","Routes","Route","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","atmDataReducer","action","locationReducer","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.4dd64e0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    alignItems: 'center',\n  }\n};\n\nfunction AppNavbar(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Hong Kong ATM Locator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppNavbar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = (WrappedComponent) => {\n  class AppHOC extends Component {\n    render() {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <div>\n              <AppNavbar location={this.props.location}/>\n              <div style={{marginTop: '64px', zIndex: '1200'}}>\n                <WrappedComponent/>\n              </div>\n          </div>\n        </MuiThemeProvider>\n      );\n    }\n  }\n  return AppHOC;\n}\n\nexport default App;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    zIndex: 1200,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction ATMSearch(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <InputBase className={classes.input} placeholder=\"Search ...\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nATMSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ATMSearch);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = {\n    root: {\n        width: '100%',\n      },\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all'\n    }\n  }\n\n  handleSelectChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleCheckboxChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  renderNetworkSelect() {\n    const { classes } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={this.state.network}\n              onChange={this.handleSelectChange}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n              <MenuItem value=\"all\">\n              <em>All</em>\n              </MenuItem>\n              <MenuItem value=\"hsbc\">HSBC</MenuItem>\n              <MenuItem value=\"hang-seng\">Hang Seng</MenuItem>\n              <MenuItem value=\"jetco\">JETCO</MenuItem>\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    const { classes } = this.props;\n    /*\n      TODO: put below const to constants file\n    */\n    const bankIndexes = ['hsbc', 'hang-seng', 'bochk', 'bankcomm', 'cncbinternational', 'asia-ccb', 'cmbchina', 'chiyubank', 'chiyubank', 'citibank', 'cmbwinglungbank',\n  'dahsing', 'dbs', 'fubonbank', 'icbcasia', 'ocbcwhhk', 'publicbank', 'shacombank', 'standardchartered', 'hkbea'];\n    const banks = ['HSBC', 'Hang Seng Bank', 'Bank of China(Hong Kong) Limited', 'Bank of Communications (Hong Kong) Limited', 'China CITIC Bank International Limited',\n  'China Construction Bank (Asia) Corporation Limited', 'China Merchants Bank Hong Kong Branch', 'Chiyu Banking Corporation Limited', 'Chong Hing Bank Limited', 'Citibank (Hong Kong) Limited', 'CMB Wing Lung Bank Limited', 'Dah Sing Bank, Limited', \n'DBS Bank (Hong Kong) Limited', 'Fubon Bank (Hong Kong) Limited', 'Industrial and Commercial Bank of China (Asia) Limited', 'Nanyang Commercial Bank Limited', 'OCBC Wing Hang Bank Limited'\n, 'Public Bank (Hong Kong) Limited', 'Shanghai Commercial Bank Limited', 'Standard Chartered Bank (Hong Kong) Limited', 'The Bank of East Asia, Limited'];\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={this.state.bank}\n              onChange={this.handleSelectChange}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n              <MenuItem value=\"all\">\n              <em>All</em>\n              </MenuItem>\n              {\n                bankIndexes.map((bankIndex, index) => {\n                  return (\n                    <MenuItem value={bankIndex}>{ banks[index] }</MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const serviceIndexes = [\n      'coinSort',\n      'foreignCurrency',\n      'disabledAccess',\n      'billPayment',\n      'cashWithdrawal',\n      'cashDeposit',\n      'chequeDeposit',\n    ];\n\n    const services = [\n      'Coin Sort',\n      'Foreign Currency',\n      'Disabled Access',\n      'Bill Payment',\n      'Cash Withdrawal',\n      'Cash Deposit',\n      'Cheque Deposit'\n    ];\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             serviceIndexes.map((serviceIndex, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[serviceIndex]}\n                      onChange={this.handleCheckboxChange(serviceIndex)}\n                      value={services[index]}\n                    />\n                  }\n                  label={services[index]}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = [\n      'Monday', \n      'Tuesday', \n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n      'Sunday'\n    ]\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day)}\n                      value={day}\n                    />\n                  }\n                  label={day}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <div></div>\n      /*\n        TODO:\n      */\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option)}\n                    value={option}\n                  />\n                }\n                label={option}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    /*\n      TODO: Add Grid for responsive design\n    */\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <div className={classes.column}>\n                <Typography className={classes.heading}>Filter</Typography>\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n                { this.renderNetworkSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderBankSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderServicesCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningDayCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningHourCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningOrClosingCheckbox() }\n                <Divider variant=\"middle\" />\n            </ExpansionPanelDetails>\n            <Divider />\n            <ExpansionPanelActions>\n                <Button size=\"small\">Cancel</Button>\n                <Button size=\"small\" color=\"primary\">\n                Submit\n                </Button>\n            </ExpansionPanelActions>\n            </ExpansionPanel>\n        </div>\n      );\n  }\n}\n\nATMFilterPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ATMFilterPanel);","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0\n    }\n});\n\nclass ATMItem extends React.Component {\n    renderOpeningClosingTag(openingHours) {\n        if(openingHours == undefined) {\n            return (null);\n        }\n\n        let weekday = new Date().getDay();\n        // Sunday   - weekday: 0\n        // Monday   - weekday: 1\n        // Tuesday  - weekday: 2\n        // ...\n        // Saturday - weekday: 6\n\n        if(weekday == 0) {\n            weekday = 7;\n        }\n\n        // openingHours\n        // [0]  - Monday \n        // [0]  - Tuesday \n        // ...\n        // [6]] - Sunday \n        const closeTimeInHHMMFormat = openingHours[weekday - 1].CloseTime;\n        const closeTimeHour = closeTimeInHHMMFormat.split(\":\")[0];\n        const closeTimeMinute = closeTimeInHHMMFormat.split(\":\")[1];\n        const currentTime = new Date();\n        let closeTime = new Date();\n        closeTime.setHours(closeTimeHour);\n        closeTime.setMinutes(closeTimeMinute);\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <br/>\n                <Chip\n                    label={ currentTime > closeTime ? 'Opening' : 'Closed' }\n                    color={ currentTime > closeTime ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distance > 1 ? Math.round(distance) + ' km' : Math.round(distance * 1000) + ' m';\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n\n    atmListItemOnClick(atm) {\n        const { ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n        if(LatitudeDescription && LongitudeDescription){\n            this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription);\n        }\n    }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMAddress, distance } = atm;\n        \n        return (\n            <ListItem button key={ idx } onClick={() => this.atmListItemOnClick(atm)}>\n                <ListItemText\n                    primary={ ATMName }\n                    secondary={\n                        <React.Fragment>\n                            { ATMAddress.AddressLine }\n                            <br/>\n                            { this.renderDistance(distance) }\n                            { this.renderOpeningClosingTag(atm.OpeningHours) }\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng) => {\n            dispatch(setSelectedLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n  ","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMItem from './ATMItem';\n\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mobileOpen: false,\n    };\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderATMItems = () => {\n    const allATMs = this.props.atm;\n    if(allATMs == undefined) {\n      return <div>Loading</div>\n    }\n\n    if(allATMs.length > 0) {\n      return allATMs.map((atm, idx) => {\n        return (\n            <React.Fragment key={idx}>\n                <ATMItem atm={atm} idx={idx}/>\n                <Divider />\n            </React.Fragment>\n        );\n    });\n    } else {\n      return <div>No ATM data</div>\n    }\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const drawer = (\n      <div>\n        <List>\n            {this.renderATMItems()}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n        </nav>\n    </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nexport {\n    distanceBetweenTwoGeoPoints\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport L from 'leaflet';\nimport ATMSearch from '../../components/ATMFilter/ATMSearch';\nimport ATMFilterPanel from '../../components/ATMFilter/ATMFilterPanel';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport HANG_SENG_DATA from '../../data/hang_seng.json';\nimport HANG_SENG_LATLNG_DATA from '../../data/hang_seng_latlng.json';\nimport HSBC_DATA from '../../data/hsbc.json';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        left: '320px',\n        width: 'calc(100% - 320px)',\n        height: '100%',\n    },\n  };\n\nclass LandingListView extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const me = this;\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n\n                me.props.setCurrentLocation(position.coords.latitude, position.coords.longitude);\n                me.props.setSelectedLocation(position.coords.latitude, position.coords.longitude);\n                me.sortATMData();\n             });\n        } else {\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n        const hangSengATMs = HANG_SENG_DATA.data[0].Brand[0].ATM;\n        let hangSengLatLngLUT = new Object();\n        for (let i=0;i<HANG_SENG_LATLNG_DATA.length; i++){\n            let rec = HANG_SENG_LATLNG_DATA[i];\n            hangSengLatLngLUT[rec.address] = {'lat': rec.lat, 'lng': rec.lng};\n        }\n        for (let i=0;i<hangSengATMs.length; i++){\n            let rec = hangSengATMs[i];\n            let latlng = hangSengLatLngLUT[rec.ATMAddress.AddressLine[0]];\n            if (latlng){\n                rec.ATMAddress.LatitudeDescription = latlng.lat;\n                rec.ATMAddress.LongitudeDescription = latlng.lng;\n            }\n        }\n\n        const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n        const allATMs = [...hangSengATMs, ...hsbcATMs];\n\n\n        /*\n            TODO: \n            - Data enrichment: (lat, lng for hang seng atms)\n        */\n        this.props.setATMData(allATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n\n        if(atm) {\n            if(this.props.currentLocation != undefined) {\n                location = this.props.currentLocation \n            }\n    \n            const sortedAllATMs = [].concat(atm)\n             .sort( (x, y) => {\n                if(x.ATMAddress.LatitudeDescription != null && x.ATMAddress.LongitudeDescription != null &&\n                    y.ATMAddress.LatitudeDescription != null && y.ATMAddress.LongitudeDescription != null ) {\n                        const distanceX = distanceBetweenTwoGeoPoints(location.lat, location.lng, x.ATMAddress.LatitudeDescription, x.ATMAddress.LongitudeDescription);\n                        const distanceY = distanceBetweenTwoGeoPoints(location.lat, location.lng, y.ATMAddress.LatitudeDescription, y.ATMAddress.LongitudeDescription);\n                        return distanceX > distanceY ? 1 : -1;\n                    }\n                return -1;\n            })\n            .map( (atm) => ({\n                ...atm,\n                distance: distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription)\n            }));\n    \n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    handleMoveEnd = (evt) => {\n        // let latlng = evt.target.getCenter();\n        /*\n            TODO: better add a new function called setZoomLevel as selectedLocation should not be evt.target.getCenter()\n        */\n        let latlng = this.props.selectedLocation;\n        let zoomLvl = evt.target.getZoom();\n        this.props.setSelectedLocation(latlng.lat, latlng.lng, zoomLvl);\n    }\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    render() {\n        const { classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n        let zoomLvlToUse = selectedZoomLvl;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length == 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length == 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n        }\n\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                <ATMSearch/>\n                <ATMFilterPanel/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingListView));","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport App from './containers/App/App';\nimport Landing from './containers/Landing/Landing';\nimport LandingListView from './containers/Landing/LandingListView';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <div>\n                <Route path='/' component={App(LandingListView)}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA\n} from '../actions/types';\n\nconst atmDataReducer = (state={}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data};\n        default:\n            return state;\n    }\n}\n\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng }, selectedZoomLvl : (action.zoomLvl==-1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\nimport css from './static/main.css';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}